<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.FinancialoutMapper">

    <sql id="Base_Column_List">
        id,department_id,time,price,name
    </sql>

    <select id="selectAll" resultType="com.example.entity.Financialout">
        select financialout.*, department.name as departmentName
        from financialout
        left join department on financialout.department_id = department.id
        <where>
            <if test="id != null"> and id= #{id}</if>
            <if test="departmentId != null"> and department_id= #{departmentId}</if>
            <if test="time != null"> and time= #{time}</if>
            <if test="price != null"> and price= #{price}</if>
            <if test="name != null"> and financialout.name like concat('%', #{name}, '%')</if>
        </where>
        order by id desc
    </select>

    <select id="selectById" resultType="com.example.entity.Financialout">
        select
        <include refid="Base_Column_List" />
        from financialout
        where id = #{id}
    </select>

    <delete id="deleteById">
        delete from financialout
        where  id = #{id}
    </delete>

    <insert id="insert" parameterType="com.example.entity.Financialout" useGeneratedKeys="true">
        insert into financialout
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="departmentId != null">department_id,</if>
            <if test="time != null">time,</if>
            <if test="price != null">price,</if>
            <if test="name != null">name,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="departmentId != null">#{departmentId},</if>
            <if test="time != null">#{time},</if>
            <if test="price != null">#{price},</if>
            <if test="name != null">#{name},</if>
        </trim>
    </insert>

    <update id="updateById" parameterType="com.example.entity.Financialout">
        update financialout
        <set>
            <if test="departmentId != null">
                department_id = #{departmentId},
            </if>
            <if test="time != null">
                time = #{time},
            </if>
            <if test="price != null">
                price = #{price},
            </if>
            <if test="name != null">
                name = #{name},
            </if>
        </set>
        where id = #{id}
    </update>

</mapper>