{"ast":null,"code":"import department from \"@/views/manager/Department.vue\";\nexport default {\n  name: \"Employee\",\n  computed: {\n    department() {\n      return department;\n    }\n  },\n  data() {\n    return {\n      tableData: [],\n      // 所有的数据\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 10,\n      // 每页显示的个数\n      total: 0,\n      username: null,\n      fromVisible: false,\n      powerName: \"\",\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入账号',\n          trigger: 'blur'\n        }]\n      },\n      ids: []\n    };\n  },\n  mounted() {\n    this.loadBefor();\n  },\n  created() {\n    this.load(1);\n    this.loadDepartments();\n  },\n  methods: {\n    loadDepartments() {\n      this.$request.get('/department/selectAll').then(res => {\n        if (res.code === '200') {\n          this.departmentData = res.data;\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    handleAdd() {\n      // 新增数据\n      this.form = {}; // 新增数据的时候清空数据\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    handleEdit(row) {\n      // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row)); // 给form对象赋值  注意要深拷贝数据\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    save() {\n      // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate(valid => {\n        if (typeof this.form.departmentId == \"undefined\" && this.form.level != null) {\n          this.$message.error(\"请选择部门\");\n        } else if (this.form.departmentId != null && typeof this.form.level == \"undefined\") {\n          this.$message.error(\"请选择身份\");\n        } else {\n          if (valid) {\n            this.$request({\n              url: this.form.id ? '/employee/update' : '/employee/add',\n              method: this.form.id ? 'PUT' : 'POST',\n              data: this.form\n            }).then(res => {\n              if (res.code === '200') {\n                // 表示成功保存\n                this.$message.success('保存成功');\n                this.load(1);\n                this.fromVisible = false;\n              } else {\n                this.$message.error(res.msg); // 弹出错误的信息\n              }\n            });\n          }\n        }\n      });\n    },\n\n    del(id) {\n      // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/employee/delete/' + id).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    handleSelectionChange(rows) {\n      // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id);\n    },\n    delBatch() {\n      // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据');\n        return;\n      }\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/employee/delete/batch', {\n          data: this.ids\n        }).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    loadBefor() {\n      this.$request.get('/employee/selectPowerName').then(res => {\n        if (res.code === '200') {\n          this.powerName = res.data.powerName;\n          console.log(\"你好\" + res.data.powerName);\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    load(pageNum) {\n      // 分页查询\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/employee/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          username: this.username\n        }\n      }).then(res => {\n        this.tableData = res.data?.list;\n        this.total = res.data?.total;\n      });\n    },\n    reset() {\n      this.username = null;\n      this.load(1);\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    },\n    handleAvatarSuccess(response, file, fileList) {\n      // 把头像属性换成上传的图片的链接\n      this.form.avatar = response.data;\n    }\n  }\n};","map":{"version":3,"names":["department","name","computed","data","tableData","pageNum","pageSize","total","username","fromVisible","powerName","form","user","JSON","parse","localStorage","getItem","rules","required","message","trigger","ids","mounted","loadBefor","created","load","loadDepartments","methods","$request","get","then","res","code","departmentData","$message","error","msg","handleAdd","handleEdit","row","stringify","save","$refs","formRef","validate","valid","departmentId","level","url","id","method","success","del","$confirm","type","response","delete","catch","handleSelectionChange","rows","map","v","delBatch","length","warning","console","log","params","list","reset","handleCurrentChange","handleAvatarSuccess","file","fileList","avatar"],"sources":["src/views/manager/Employee.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"search\">\r\n      <el-input placeholder=\"请输入账号查询\" style=\"width: 200px\" v-model=\"username\"></el-input>\r\n      <el-button type=\"info\" plain style=\"margin-left: 10px\" @click=\"load(1)\">查询</el-button>\r\n      <el-button type=\"warning\" plain style=\"margin-left: 10px\" @click=\"reset\">重置</el-button>\r\n    </div>\r\n\r\n    <div v-if=\"user.role == 'ADMIN'\" class=\"operation\">\r\n      <el-button type=\"primary\" plain @click=\"handleAdd\">新增</el-button>\r\n      <el-button type=\"danger\" plain @click=\"delBatch\">批量删除</el-button>\r\n    </div>\r\n\r\n    <div class=\"table\">\r\n      <el-table :data=\"tableData\" strip @selection-change=\"handleSelectionChange\">\r\n        <el-table-column v-if=\"user.role == 'ADMIN'\" type=\"selection\" width=\"55\" align=\"center\"></el-table-column>\r\n<!--        <el-table-column prop=\"id\" label=\"序号\" width=\"70\" align=\"center\" sortable></el-table-column>-->\r\n        <el-table-column prop=\"username\" label=\"账号\"></el-table-column>\r\n        <el-table-column prop=\"name\" label=\"姓名\"></el-table-column>\r\n        <el-table-column prop=\"phone\" label=\"电话\"></el-table-column>\r\n        <el-table-column prop=\"email\" label=\"邮箱\"></el-table-column>\r\n        <el-table-column prop=\"departmentName\" label=\"部门\"></el-table-column>\r\n        <el-table-column prop=\"level\" label=\"身份\" >\r\n          <template slot-scope=\"scope\">\r\n            <span v-if=\"scope.row.level == 1\">员工</span>\r\n            <span v-if=\"scope.row.level == 2\">部长</span>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column v-if=\"user.role == 'ADMIN'\"  prop=\"role\" label=\"角色\"></el-table-column>\r\n\r\n        <el-table-column label=\"头像\">\r\n          <template v-slot=\"scope\">\r\n            <div style=\"display: flex; align-items: center\">\r\n              <el-image style=\"width: 40px; height: 40px; border-radius: 50%\" v-if=\"scope.row.avatar\"\r\n                        :src=\"scope.row.avatar\" :preview-src-list=\"[scope.row.avatar]\"></el-image>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <el-table-column  v-if=\"powerName === '人事'\" label=\"操作\" align=\"center\" width=\"180\">\r\n          <template v-slot=\"scope\">\r\n            <el-button   size=\"mini\" type=\"primary\" plain @click=\"handleEdit(scope.row)\">编辑</el-button>\r\n            <el-button   v-if=\"user.level === 2\" size=\"mini\" type=\"danger\" plain @click=\"del(scope.row.id)\">删除</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <div class=\"pagination\">\r\n        <el-pagination\r\n            background\r\n            @current-change=\"handleCurrentChange\"\r\n            :current-page=\"pageNum\"\r\n            :page-sizes=\"[5, 10, 20]\"\r\n            :page-size=\"pageSize\"\r\n            layout=\"total, prev, pager, next\"\r\n            :total=\"total\">\r\n        </el-pagination>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <el-dialog title=\"员工\" :visible.sync=\"fromVisible\" width=\"40%\" :close-on-click-modal=\"false\" destroy-on-close>\r\n      <el-form :model=\"form\" label-width=\"100px\" style=\"padding-right: 50px\" :rules=\"rules\" ref=\"formRef\">\r\n        <el-form-item label=\"用户名\" prop=\"username\">\r\n          <el-input v-model=\"form.username\" placeholder=\"用户名\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"姓名\" prop=\"name\">\r\n          <el-input v-model=\"form.name\" placeholder=\"姓名\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"电话\" prop=\"phone\">\r\n          <el-input v-model=\"form.phone\" placeholder=\"电话\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"邮箱\" prop=\"email\">\r\n          <el-input v-model=\"form.email\" placeholder=\"邮箱\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"部门\" prop=\"level\">\r\n          <el-select v-model=\"form.departmentId\" placeholder=\"请选择部门\" style=\"width: 100%\">\r\n            <el-option v-for=\"item in departmentData\" :label=\"item.name\" :value=\"item.id\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"身份\">\r\n          <el-radio-group v-model=\"form.level\">\r\n            <el-radio :label=\"1\" value=\"1\">员工</el-radio>\r\n            <el-radio :label=\"2\" value=\"2\">部长</el-radio>\r\n          </el-radio-group>\r\n        </el-form-item>\r\n        <el-form-item label=\"头像\">\r\n          <el-upload\r\n              class=\"avatar-uploader\"\r\n              :action=\"$baseUrl + '/files/upload'\"\r\n              :headers=\"{ token: user.token }\"\r\n              list-type=\"picture\"\r\n              :on-success=\"handleAvatarSuccess\"\r\n          >\r\n            <el-button type=\"primary\">上传头像</el-button>\r\n          </el-upload>\r\n        </el-form-item>\r\n      </el-form>\r\n\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"fromVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"save\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport department from \"@/views/manager/Department.vue\";\r\n\r\nexport default {\r\n  name: \"Employee\",\r\n  computed: {\r\n    department() {\r\n      return department\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      tableData: [],  // 所有的数据\r\n      pageNum: 1,     // 当前的页码\r\n      pageSize: 10,   // 每页显示的个数\r\n      total: 0,\r\n      username: null,\r\n      fromVisible: false,\r\n      powerName:\"\",\r\n      form: {\r\n\r\n      },\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      rules: {\r\n        username: [\r\n          {required: true, message: '请输入账号', trigger: 'blur'},\r\n        ],\r\n      },\r\n      ids: []\r\n    }\r\n  },\r\n  mounted() {\r\n    this.loadBefor()\r\n  },\r\n  created() {\r\n    this.load(1)\r\n    this.loadDepartments()\r\n  },\r\n  methods: {\r\n    loadDepartments() {\r\n      this.$request.get('/department/selectAll').then(res => {\r\n        if (res.code === '200') {\r\n          this.departmentData = res.data\r\n        } else {\r\n          this.$message.error(res.msg)\r\n        }\r\n      })\r\n    },\r\n\r\n    handleAdd() {   // 新增数据\r\n      this.form = {}  // 新增数据的时候清空数据\r\n      this.fromVisible = true   // 打开弹窗\r\n    },\r\n\r\n    handleEdit(row) {   // 编辑数据\r\n      this.form = JSON.parse(JSON.stringify(row))  // 给form对象赋值  注意要深拷贝数据\r\n      this.fromVisible = true   // 打开弹窗\r\n    },\r\n\r\n    save() {   // 保存按钮触发的逻辑  它会触发新增或者更新\r\n      this.$refs.formRef.validate((valid) => {\r\n        if(typeof(this.form.departmentId) == \"undefined\" && this.form.level != null){\r\n          this.$message.error(\"请选择部门\")\r\n        }\r\n        else if(this.form.departmentId != null && typeof(this.form.level) == \"undefined\"){\r\n          this.$message.error(\"请选择身份\")\r\n        }else{\r\n            if (valid) {\r\n          this.$request({\r\n            url: this.form.id ? '/employee/update' : '/employee/add',\r\n            method: this.form.id ? 'PUT' : 'POST',\r\n            data: this.form\r\n          }).then(res => {\r\n            if (res.code === '200') {  // 表示成功保存\r\n              this.$message.success('保存成功')\r\n              this.load(1)\r\n              this.fromVisible = false\r\n            } else {\r\n              this.$message.error(res.msg)  // 弹出错误的信息\r\n            }\r\n          })\r\n        }\r\n        }\r\n      })\r\n    },\r\n\r\n    del(id) {   // 单个删除\r\n      this.$confirm('您确定删除吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n        this.$request.delete('/employee/delete/' + id).then(res => {\r\n          if (res.code === '200') {   // 表示操作成功\r\n            this.$message.success('操作成功')\r\n            this.load(1)\r\n          } else {\r\n            this.$message.error(res.msg)  // 弹出错误的信息\r\n          }\r\n        })\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    handleSelectionChange(rows) {   // 当前选中的所有的行数据\r\n      this.ids = rows.map(v => v.id)\r\n    },\r\n    delBatch() {   // 批量删除\r\n      if (!this.ids.length) {\r\n        this.$message.warning('请选择数据')\r\n        return\r\n      }\r\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n        this.$request.delete('/employee/delete/batch', {data: this.ids}).then(res => {\r\n          if (res.code === '200') {   // 表示操作成功\r\n            this.$message.success('操作成功')\r\n            this.load(1)\r\n          } else {\r\n            this.$message.error(res.msg)  // 弹出错误的信息\r\n          }\r\n        })\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    loadBefor(){\r\n      this.$request.get('/employee/selectPowerName').then(res => {\r\n        if (res.code === '200') {\r\n          this.powerName = res.data.powerName\r\n          console.log(\"你好\"+ res.data.powerName)\r\n        } else {\r\n          this.$message.error(res.msg)\r\n        }\r\n      })\r\n    },\r\n    load(pageNum) {  // 分页查询\r\n      if (pageNum) this.pageNum = pageNum\r\n      this.$request.get('/employee/selectPage', {\r\n        params: {\r\n          pageNum: this.pageNum,\r\n          pageSize: this.pageSize,\r\n          username: this.username,\r\n        }\r\n      }).then(res => {\r\n        this.tableData = res.data?.list\r\n        this.total = res.data?.total\r\n      })\r\n    },\r\n    reset() {\r\n      this.username = null\r\n      this.load(1)\r\n    },\r\n    handleCurrentChange(pageNum) {\r\n      this.load(pageNum)\r\n    },\r\n    handleAvatarSuccess(response, file, fileList) {\r\n      // 把头像属性换成上传的图片的链接\r\n      this.form.avatar = response.data\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":"AA8GA,OAAAA,UAAA;AAEA;EACAC,IAAA;EACAC,QAAA;IACAF,WAAA;MACA,OAAAA,UAAA;IACA;EACA;EACAG,KAAA;IACA;MACAC,SAAA;MAAA;MACAC,OAAA;MAAA;MACAC,QAAA;MAAA;MACAC,KAAA;MACAC,QAAA;MACAC,WAAA;MACAC,SAAA;MACAC,IAAA,GAEA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,KAAA;QACAT,QAAA,GACA;UAAAU,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;MACAC,GAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,SAAA;EACA;EACAC,QAAA;IACA,KAAAC,IAAA;IACA,KAAAC,eAAA;EACA;EACAC,OAAA;IACAD,gBAAA;MACA,KAAAE,QAAA,CAAAC,GAAA,0BAAAC,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAC,cAAA,GAAAF,GAAA,CAAA5B,IAAA;QACA;UACA,KAAA+B,QAAA,CAAAC,KAAA,CAAAJ,GAAA,CAAAK,GAAA;QACA;MACA;IACA;IAEAC,UAAA;MAAA;MACA,KAAA1B,IAAA;MACA,KAAAF,WAAA;IACA;;IAEA6B,WAAAC,GAAA;MAAA;MACA,KAAA5B,IAAA,GAAAE,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAA2B,SAAA,CAAAD,GAAA;MACA,KAAA9B,WAAA;IACA;;IAEAgC,KAAA;MAAA;MACA,KAAAC,KAAA,CAAAC,OAAA,CAAAC,QAAA,CAAAC,KAAA;QACA,gBAAAlC,IAAA,CAAAmC,YAAA,wBAAAnC,IAAA,CAAAoC,KAAA;UACA,KAAAb,QAAA,CAAAC,KAAA;QACA,OACA,SAAAxB,IAAA,CAAAmC,YAAA,wBAAAnC,IAAA,CAAAoC,KAAA;UACA,KAAAb,QAAA,CAAAC,KAAA;QACA;UACA,IAAAU,KAAA;YACA,KAAAjB,QAAA;cACAoB,GAAA,OAAArC,IAAA,CAAAsC,EAAA;cACAC,MAAA,OAAAvC,IAAA,CAAAsC,EAAA;cACA9C,IAAA,OAAAQ;YACA,GAAAmB,IAAA,CAAAC,GAAA;cACA,IAAAA,GAAA,CAAAC,IAAA;gBAAA;gBACA,KAAAE,QAAA,CAAAiB,OAAA;gBACA,KAAA1B,IAAA;gBACA,KAAAhB,WAAA;cACA;gBACA,KAAAyB,QAAA,CAAAC,KAAA,CAAAJ,GAAA,CAAAK,GAAA;cACA;YACA;UACA;QACA;MACA;IACA;;IAEAgB,IAAAH,EAAA;MAAA;MACA,KAAAI,QAAA;QAAAC,IAAA;MAAA,GAAAxB,IAAA,CAAAyB,QAAA;QACA,KAAA3B,QAAA,CAAA4B,MAAA,uBAAAP,EAAA,EAAAnB,IAAA,CAAAC,GAAA;UACA,IAAAA,GAAA,CAAAC,IAAA;YAAA;YACA,KAAAE,QAAA,CAAAiB,OAAA;YACA,KAAA1B,IAAA;UACA;YACA,KAAAS,QAAA,CAAAC,KAAA,CAAAJ,GAAA,CAAAK,GAAA;UACA;QACA;MACA,GAAAqB,KAAA,QACA;IACA;IACAC,sBAAAC,IAAA;MAAA;MACA,KAAAtC,GAAA,GAAAsC,IAAA,CAAAC,GAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAZ,EAAA;IACA;IACAa,SAAA;MAAA;MACA,UAAAzC,GAAA,CAAA0C,MAAA;QACA,KAAA7B,QAAA,CAAA8B,OAAA;QACA;MACA;MACA,KAAAX,QAAA;QAAAC,IAAA;MAAA,GAAAxB,IAAA,CAAAyB,QAAA;QACA,KAAA3B,QAAA,CAAA4B,MAAA;UAAArD,IAAA,OAAAkB;QAAA,GAAAS,IAAA,CAAAC,GAAA;UACA,IAAAA,GAAA,CAAAC,IAAA;YAAA;YACA,KAAAE,QAAA,CAAAiB,OAAA;YACA,KAAA1B,IAAA;UACA;YACA,KAAAS,QAAA,CAAAC,KAAA,CAAAJ,GAAA,CAAAK,GAAA;UACA;QACA;MACA,GAAAqB,KAAA,QACA;IACA;IACAlC,UAAA;MACA,KAAAK,QAAA,CAAAC,GAAA,8BAAAC,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAtB,SAAA,GAAAqB,GAAA,CAAA5B,IAAA,CAAAO,SAAA;UACAuD,OAAA,CAAAC,GAAA,QAAAnC,GAAA,CAAA5B,IAAA,CAAAO,SAAA;QACA;UACA,KAAAwB,QAAA,CAAAC,KAAA,CAAAJ,GAAA,CAAAK,GAAA;QACA;MACA;IACA;IACAX,KAAApB,OAAA;MAAA;MACA,IAAAA,OAAA,OAAAA,OAAA,GAAAA,OAAA;MACA,KAAAuB,QAAA,CAAAC,GAAA;QACAsC,MAAA;UACA9D,OAAA,OAAAA,OAAA;UACAC,QAAA,OAAAA,QAAA;UACAE,QAAA,OAAAA;QACA;MACA,GAAAsB,IAAA,CAAAC,GAAA;QACA,KAAA3B,SAAA,GAAA2B,GAAA,CAAA5B,IAAA,EAAAiE,IAAA;QACA,KAAA7D,KAAA,GAAAwB,GAAA,CAAA5B,IAAA,EAAAI,KAAA;MACA;IACA;IACA8D,MAAA;MACA,KAAA7D,QAAA;MACA,KAAAiB,IAAA;IACA;IACA6C,oBAAAjE,OAAA;MACA,KAAAoB,IAAA,CAAApB,OAAA;IACA;IACAkE,oBAAAhB,QAAA,EAAAiB,IAAA,EAAAC,QAAA;MACA;MACA,KAAA9D,IAAA,CAAA+D,MAAA,GAAAnB,QAAA,CAAApD,IAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}