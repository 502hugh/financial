{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nexport default {\n  name: \"Log\",\n  data() {\n    return {\n      tableData: [],\n      // 所有的数据\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 5,\n      // 每页显示的个数\n      total: 0,\n      name: null,\n      operationType: null,\n      operationUser: null,\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      ids: [],\n      status: null\n    };\n  },\n  created() {\n    this.load(1);\n  },\n  methods: {\n    downloadExcel() {\n      // 发送请求到后端，下载文件\n      this.$request.post('/excel/logOut', this.form, {\n        responseType: 'blob'\n      }).then(res => {\n        let blob = new Blob([res], {\n          type: 'application/xlsx'\n        });\n        let url = window.URL.createObjectURL(blob);\n        const link = document.createElement('a'); //创建a标签\n        link.href = url;\n        link.download = '操作日志.xlsx'; //重命名文件\n        link.click();\n        URL.revokeObjectURL(url);\n      }).catch(error => {\n        console.error('下载文件失败', error);\n      });\n    },\n    handleSelectionChange(rows) {\n      // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id);\n    },\n    delBatch() {\n      // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据');\n        return;\n      }\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/log/delete/batch', {\n          data: this.ids\n        }).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    del(id) {\n      // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/log/delete/' + id).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    load(pageNum) {\n      // 分页查询\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/log/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          operationType: this.operationType\n        }\n      }).then(res => {\n        this.tableData = res.data?.list;\n        this.total = res.data?.total;\n      });\n    },\n    reset() {\n      this.resourcesName = null;\n      this.load(1);\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    }\n  }\n};","map":{"version":3,"names":["name","data","tableData","pageNum","pageSize","total","operationType","operationUser","form","user","JSON","parse","localStorage","getItem","ids","status","created","load","methods","downloadExcel","$request","post","responseType","then","res","blob","Blob","type","url","window","URL","createObjectURL","link","document","createElement","href","download","click","revokeObjectURL","catch","error","console","handleSelectionChange","rows","map","v","id","delBatch","length","$message","warning","$confirm","response","delete","code","success","msg","del","get","params","list","reset","resourcesName","handleCurrentChange"],"sources":["src/views/manager/Log.vue"],"sourcesContent":["\r\n<template>\r\n  <div>\r\n    <div class=\"search\">\r\n      <el-input placeholder=\"输入操作类型\" style=\"width: 200px\" v-model=\"operationType\"></el-input>\r\n      <el-button type=\"info\" plain style=\"margin-left: 10px\" @click=\"load(1)\">查询</el-button>\r\n      <el-button type=\"warning\" plain style=\"margin-left: 10px\" @click=\"reset\">重置</el-button>\r\n      <el-button  type=\"primary\" plain style=\"margin-left: 10px\" @click=\"downloadExcel\">导出操作记录</el-button>\r\n    </div>\r\n\r\n    <div class=\"operation\">\r\n      <el-button type=\"danger\" plain @click=\"delBatch\">批量删除</el-button>\r\n    </div>\r\n\r\n    <div class=\"table\">\r\n      <el-table :data=\"tableData\" stripe @selection-change=\"handleSelectionChange\">\r\n        <el-table-column type=\"selection\" width=\"55\" align=\"center\"></el-table-column>\r\n        <!--        <el-table-column prop=\"id\" label=\"序号\" width=\"80\" align=\"center\" sortable></el-table-column>-->\r\n        <el-table-column prop=\"operationType\" label=\"操作类型\" show-overflow-tooltip></el-table-column>\r\n        <el-table-column prop=\"operationTime\" label=\"操作时间\" show-overflow-tooltip></el-table-column>\r\n        <el-table-column prop=\"operationUser\" label=\"操作用户\"></el-table-column>\r\n        <el-table-column prop=\"operationContent\" label=\"操作信息\"></el-table-column>\r\n\r\n        <el-table-column label=\"操作\" align=\"center\" width=\"180\">\r\n          <template v-slot=\"scope\">\r\n            <el-button size=\"mini\" type=\"danger\" plain @click=\"del(scope.row.id)\">删除</el-button>\r\n          </template>\r\n        </el-table-column>\r\n\r\n      </el-table>\r\n\r\n      <div class=\"pagination\">\r\n        <el-pagination\r\n            background\r\n            @current-change=\"handleCurrentChange\"\r\n            :current-page=\"pageNum\"\r\n            :page-sizes=\"[5, 10, 20]\"\r\n            :page-size=\"pageSize\"\r\n            layout=\"total, prev, pager, next\"\r\n            :total=\"total\">\r\n        </el-pagination>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<script>\r\nexport default {\r\n  name: \"Log\",\r\n  data() {\r\n    return {\r\n      tableData: [],  // 所有的数据\r\n      pageNum: 1,   // 当前的页码\r\n      pageSize: 5,  // 每页显示的个数\r\n      total: 0,\r\n      name: null,\r\n      operationType: null,\r\n      operationUser:null,\r\n      form: {},\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      ids: [],\r\n      status: null\r\n    }\r\n  },\r\n  created() {\r\n    this.load(1)\r\n  },\r\n  methods: {\r\n\r\n    downloadExcel() {\r\n      // 发送请求到后端，下载文件\r\n      this.$request.post('/excel/logOut', this.form, { responseType: 'blob' })\r\n          .then(res => {\r\n            let blob = new Blob([res], { type: 'application/xlsx' });\r\n            let url = window.URL.createObjectURL(blob);\r\n            const link = document.createElement('a'); //创建a标签\r\n            link.href = url;\r\n            link.download = '操作日志.xlsx'; //重命名文件\r\n            link.click();\r\n            URL.revokeObjectURL(url);\r\n          })\r\n          .catch(error => {\r\n            console.error('下载文件失败', error);\r\n          });\r\n    },\r\n    handleSelectionChange(rows) {   // 当前选中的所有的行数据\r\n      this.ids = rows.map(v => v.id)\r\n    },\r\n    delBatch() {   // 批量删除\r\n      if (!this.ids.length) {\r\n        this.$message.warning('请选择数据')\r\n        return\r\n      }\r\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n        this.$request.delete('/log/delete/batch', {data: this.ids}).then(res => {\r\n          if (res.code === '200') {   // 表示操作成功\r\n            this.$message.success('操作成功')\r\n            this.load(1)\r\n          } else {\r\n            this.$message.error(res.msg)  // 弹出错误的信息\r\n          }\r\n        })\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    del(id) {   // 单个删除\r\n      this.$confirm('您确定删除吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n        this.$request.delete('/log/delete/' + id).then(res => {\r\n          if (res.code === '200') {   // 表示操作成功\r\n            this.$message.success('操作成功')\r\n            this.load(1)\r\n          } else {\r\n            this.$message.error(res.msg)  // 弹出错误的信息\r\n          }\r\n        })\r\n      }).catch(() => {\r\n      })\r\n    },\r\n\r\n    load(pageNum) {  // 分页查询\r\n      if (pageNum) this.pageNum = pageNum\r\n      this.$request.get('/log/selectPage', {\r\n        params: {\r\n          pageNum: this.pageNum,\r\n          pageSize: this.pageSize,\r\n          operationType: this.operationType,\r\n        }\r\n      }).then(res => {\r\n        this.tableData = res.data?.list\r\n        this.total = res.data?.total\r\n      })\r\n    },\r\n    reset() {\r\n      this.resourcesName = null\r\n      this.load(1)\r\n    },\r\n    handleCurrentChange(pageNum) {\r\n      this.load(pageNum)\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"mappings":";;;AAsDA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;MAAA;MACAC,OAAA;MAAA;MACAC,QAAA;MAAA;MACAC,KAAA;MACAL,IAAA;MACAM,aAAA;MACAC,aAAA;MACAC,IAAA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,GAAA;MACAC,MAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,IAAA;EACA;EACAC,OAAA;IAEAC,cAAA;MACA;MACA,KAAAC,QAAA,CAAAC,IAAA,uBAAAb,IAAA;QAAAc,YAAA;MAAA,GACAC,IAAA,CAAAC,GAAA;QACA,IAAAC,IAAA,OAAAC,IAAA,EAAAF,GAAA;UAAAG,IAAA;QAAA;QACA,IAAAC,GAAA,GAAAC,MAAA,CAAAC,GAAA,CAAAC,eAAA,CAAAN,IAAA;QACA,MAAAO,IAAA,GAAAC,QAAA,CAAAC,aAAA;QACAF,IAAA,CAAAG,IAAA,GAAAP,GAAA;QACAI,IAAA,CAAAI,QAAA;QACAJ,IAAA,CAAAK,KAAA;QACAP,GAAA,CAAAQ,eAAA,CAAAV,GAAA;MACA,GACAW,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,WAAAA,KAAA;MACA;IACA;IACAE,sBAAAC,IAAA;MAAA;MACA,KAAA7B,GAAA,GAAA6B,IAAA,CAAAC,GAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAC,EAAA;IACA;IACAC,SAAA;MAAA;MACA,UAAAjC,GAAA,CAAAkC,MAAA;QACA,KAAAC,QAAA,CAAAC,OAAA;QACA;MACA;MACA,KAAAC,QAAA;QAAAxB,IAAA;MAAA,GAAAJ,IAAA,CAAA6B,QAAA;QACA,KAAAhC,QAAA,CAAAiC,MAAA;UAAApD,IAAA,OAAAa;QAAA,GAAAS,IAAA,CAAAC,GAAA;UACA,IAAAA,GAAA,CAAA8B,IAAA;YAAA;YACA,KAAAL,QAAA,CAAAM,OAAA;YACA,KAAAtC,IAAA;UACA;YACA,KAAAgC,QAAA,CAAAT,KAAA,CAAAhB,GAAA,CAAAgC,GAAA;UACA;QACA;MACA,GAAAjB,KAAA,QACA;IACA;IACAkB,IAAAX,EAAA;MAAA;MACA,KAAAK,QAAA;QAAAxB,IAAA;MAAA,GAAAJ,IAAA,CAAA6B,QAAA;QACA,KAAAhC,QAAA,CAAAiC,MAAA,kBAAAP,EAAA,EAAAvB,IAAA,CAAAC,GAAA;UACA,IAAAA,GAAA,CAAA8B,IAAA;YAAA;YACA,KAAAL,QAAA,CAAAM,OAAA;YACA,KAAAtC,IAAA;UACA;YACA,KAAAgC,QAAA,CAAAT,KAAA,CAAAhB,GAAA,CAAAgC,GAAA;UACA;QACA;MACA,GAAAjB,KAAA,QACA;IACA;IAEAtB,KAAAd,OAAA;MAAA;MACA,IAAAA,OAAA,OAAAA,OAAA,GAAAA,OAAA;MACA,KAAAiB,QAAA,CAAAsC,GAAA;QACAC,MAAA;UACAxD,OAAA,OAAAA,OAAA;UACAC,QAAA,OAAAA,QAAA;UACAE,aAAA,OAAAA;QACA;MACA,GAAAiB,IAAA,CAAAC,GAAA;QACA,KAAAtB,SAAA,GAAAsB,GAAA,CAAAvB,IAAA,EAAA2D,IAAA;QACA,KAAAvD,KAAA,GAAAmB,GAAA,CAAAvB,IAAA,EAAAI,KAAA;MACA;IACA;IACAwD,MAAA;MACA,KAAAC,aAAA;MACA,KAAA7C,IAAA;IACA;IACA8C,oBAAA5D,OAAA;MACA,KAAAc,IAAA,CAAAd,OAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}