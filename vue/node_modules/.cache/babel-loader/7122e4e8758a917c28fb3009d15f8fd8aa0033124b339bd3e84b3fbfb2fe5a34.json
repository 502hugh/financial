{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport department from \"@/views/manager/Department.vue\";\nimport axios from \"axios\";\nexport default {\n  name: \"Employee\",\n  computed: {\n    department() {\n      return department;\n    }\n  },\n  data() {\n    return {\n      tableData: [],\n      // 所有的数据\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 10,\n      // 每页显示的个数\n      total: 0,\n      username: null,\n      fromVisible: false,\n      employee: \"\",\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入账号',\n          trigger: 'blur'\n        }],\n        phone: [{\n          pattern: /^1[3456789]\\d{9}$/,\n          message: '手机号码格式不正确',\n          trigger: 'blur'\n        }],\n        email: [{\n          pattern: /^\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/,\n          message: '邮箱地址格式不正确',\n          trigger: 'blur'\n        }]\n      },\n      errorMessages: {\n        username: '' //用户名的错误\n        // 其他表单项的错误信息\n      },\n\n      ids: [],\n      employeePower: \"\",\n      dialogOfUpload: false,\n      fileListExcel: []\n    };\n  },\n  mounted() {\n    this.loadBefor();\n    this.loadEmployeePower();\n    this.handleUserNameSelectChange();\n    setTimeout(() => {\n      // 在延迟后执行相关操作\n    }, 200);\n  },\n  created() {\n    this.load(1);\n    this.loadDepartments();\n  },\n  methods: {\n    excelIn() {\n      this.dialogOfUpload = true;\n    },\n    handleChangeExcel(file, fileListExcel) {\n      //文件数量改变\n      this.fileListExcel = fileListExcel;\n    },\n    employeeUpload() {\n      var param = new FormData();\n      this.fileListExcel.forEach((val, index) => {\n        param.append(\"file\", val.raw);\n      });\n      this.$request.post(\"/excel/employeeIn\", param, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          token: this.user.token\n        }\n      }).then(res => {\n        if (res.code === 200) {\n          this.$message(res.msg);\n        }\n      });\n    },\n    downloadExcelM() {\n      // 发送请求到后端，下载文件\n      this.$request.post('/excel/employeeM', this.form, {\n        responseType: 'blob'\n      }).then(res => {\n        let blob = new Blob([res], {\n          type: 'application/xlsx'\n        });\n        let url = window.URL.createObjectURL(blob);\n        const link = document.createElement('a'); //创建a标签\n        link.href = url;\n        link.download = '员工模板.xlsx'; //重命名文件\n        link.click();\n        URL.revokeObjectURL(url);\n      }).catch(error => {\n        this.$message.error('下载文件失败', error);\n      });\n    },\n    downloadExcel() {\n      // 发送请求到后端，下载文件\n      this.$request.post('/excel/employeeOut', this.form, {\n        responseType: 'blob'\n      }).then(res => {\n        let blob = new Blob([res], {\n          type: 'application/xlsx'\n        });\n        let url = window.URL.createObjectURL(blob);\n        const link = document.createElement('a'); //创建a标签\n        link.href = url;\n        link.download = '员工表.xlsx'; //重命名文件\n        link.click();\n        URL.revokeObjectURL(url);\n      }).catch(error => {\n        this.$message.error('下载文件失败', error);\n      });\n    },\n    handleUserNameSelectChange() {\n      this.$request.get('/employee/selectByUsername/' + this.form.username).then(res => {\n        if (res.code === '200') {\n          this.errorMessages.username = ''; // 清空错误信息\n        } else {\n          this.errorMessages.username = res.msg; // 设置错误信息\n        }\n      });\n    },\n\n    loadEmployeePower() {\n      //获取当前员工用户的信息\n      this.$request.get('/employee/selectPowerName').then(res => {\n        if (res.code === '200') {\n          this.employeePower = res.data;\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    loadDepartments() {\n      this.$request.get('/department/selectAll').then(res => {\n        if (res.code === '200') {\n          this.departmentData = res.data;\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    handleAdd() {\n      // 新增数据\n      this.form = {}; // 新增数据的时候清空数据\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    handleEdit(row) {\n      // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row)); // 给form对象赋值  注意要深拷贝数据\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    save() {\n      // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate(valid => {\n        if (typeof this.form.departmentId == \"undefined\" && this.form.level != null) {\n          this.$message.error(\"请选择部门\");\n        } else if (this.form.departmentId != null && typeof this.form.level == \"undefined\") {\n          this.$message.error(\"请选择身份\");\n        } else {\n          if (valid) {\n            this.$request({\n              url: this.form.id ? '/employee/update' : '/employee/add',\n              method: this.form.id ? 'PUT' : 'POST',\n              data: this.form\n            }).then(res => {\n              if (res.code === '200') {\n                // 表示成功保存\n                this.$message.success('保存成功');\n                this.load(1);\n                this.fromVisible = false;\n              } else {\n                this.$message.error(res.msg); // 弹出错误的信息\n              }\n            });\n          }\n        }\n      });\n    },\n\n    del(id) {\n      // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/employee/delete/' + id).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    handleSelectionChange(rows) {\n      // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id);\n    },\n    delBatch() {\n      // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据');\n        return;\n      }\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/employee/delete/batch', {\n          data: this.ids\n        }).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    loadBefor() {\n      //获取信息\n      this.$request.get('/employee/selectPowerName').then(res => {\n        if (res.code === '200') {\n          this.employee = res.data;\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    load(pageNum) {\n      // 分页查询\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/employee/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          username: this.username\n        }\n      }).then(res => {\n        this.tableData = res.data?.list;\n        this.total = res.data?.total;\n      });\n    },\n    reset() {\n      this.username = null;\n      this.load(1);\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    },\n    handleAvatarSuccess(response, file, fileList) {\n      // 把头像属性换成上传的图片的链接\n      this.form.avatar = response.data;\n    }\n  }\n};","map":{"version":3,"names":["department","axios","name","computed","data","tableData","pageNum","pageSize","total","username","fromVisible","employee","form","user","JSON","parse","localStorage","getItem","rules","required","message","trigger","phone","pattern","email","errorMessages","ids","employeePower","dialogOfUpload","fileListExcel","mounted","loadBefor","loadEmployeePower","handleUserNameSelectChange","setTimeout","created","load","loadDepartments","methods","excelIn","handleChangeExcel","file","employeeUpload","param","FormData","forEach","val","index","append","raw","$request","post","headers","token","then","res","code","$message","msg","downloadExcelM","responseType","blob","Blob","type","url","window","URL","createObjectURL","link","document","createElement","href","download","click","revokeObjectURL","catch","error","downloadExcel","get","departmentData","handleAdd","handleEdit","row","stringify","save","$refs","formRef","validate","valid","departmentId","level","id","method","success","del","$confirm","response","delete","handleSelectionChange","rows","map","v","delBatch","length","warning","params","list","reset","handleCurrentChange","handleAvatarSuccess","fileList","avatar"],"sources":["src/views/manager/user/Employee.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"search\">\r\n      <el-input placeholder=\"请输入账号查询\" style=\"width: 200px\" v-model=\"username\"></el-input>\r\n      <el-button type=\"info\" plain style=\"margin-left: 10px\" @click=\"load(1)\">查询</el-button>\r\n      <el-button type=\"warning\" plain style=\"margin-left: 10px\" @click=\"reset\">重置</el-button>\r\n      <el-button v-if=\"user.role === 'ADMIN'\" type=\"primary\" plain style=\"margin-left: 10px\" @click=\"downloadExcel\">导出员工信息</el-button>\r\n      <el-button v-if=\"user.role === 'ADMIN' \" type=\"primary\" plain style=\"margin-left: 10px\" @click=\"downloadExcelM\">导出上传模板</el-button>\r\n      <el-button v-if=\"user.role === 'ADMIN'\" type=\"primary\" plain style=\"margin-left: 10px\" @click=\"excelIn\">导入员工信息 </el-button>\r\n    </div>\r\n\r\n\r\n    <!-- 上传对话框 -->\r\n    <el-dialog title=\"上传模板\" :visible.sync=\"dialogOfUpload\" width=\"35%\" style=\"text-align: center;\">\r\n      <el-upload class=\"upload-demo\" action=\"#\" drag multiple  :auto-upload=\"false\"\r\n                 :file-list=\"fileListExcel\" :on-change=\"handleChangeExcel\">\r\n        <i class=\"el-icon-upload\"></i>\r\n        <div class=\"el-upload__text\">将文件拖到此处，或<em>点击上传</em></div>\r\n        <div class=\"el-upload__tip\" slot=\"tip\">上传Excel格式文件</div>\r\n      </el-upload>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogOfUpload = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"employeeUpload()\">上 传</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n\r\n    <div v-if=\"user.role === 'ADMIN' || employeePower.powerName === '人事'\" class=\"operation\">\r\n      <el-button type=\"primary\" plain @click=\"handleAdd\">新增</el-button>\r\n      <el-button v-if=\"user.role === 'ADMIN'\"  type=\"danger\" plain @click=\"delBatch\">批量删除</el-button>\r\n    </div>\r\n\r\n    <div class=\"table\">\r\n      <el-table :data=\"tableData\" strip @selection-change=\"handleSelectionChange\">\r\n        <el-table-column v-if=\"user.role === 'ADMIN'\" type=\"selection\" width=\"55\" align=\"center\"></el-table-column>\r\n<!--        <el-table-column prop=\"id\" label=\"序号\" width=\"70\" align=\"center\" sortable></el-table-column>-->\r\n        <el-table-column prop=\"username\" label=\"账号\"></el-table-column>\r\n        <el-table-column prop=\"name\" label=\"姓名\"></el-table-column>\r\n        <el-table-column prop=\"phone\" label=\"电话\"></el-table-column>\r\n        <el-table-column prop=\"email\" label=\"邮箱\"></el-table-column>\r\n        <el-table-column prop=\"departmentName\" label=\"部门\"></el-table-column>\r\n        <el-table-column prop=\"level\" label=\"身份\" >\r\n          <template slot-scope=\"scope\">\r\n            <span v-if=\"scope.row.level === 1\">员工</span>\r\n            <span v-if=\"scope.row.level === 2\">部长</span>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column v-if=\"user.role == 'ADMIN'\"  prop=\"role\" label=\"角色\"></el-table-column>\r\n\r\n        <el-table-column label=\"头像\">\r\n          <template v-slot=\"scope\">\r\n            <div style=\"display: flex; align-items: center\">\r\n              <el-image style=\"width: 40px; height: 40px; border-radius: 50%\" v-if=\"scope.row.avatar\"\r\n                        :src=\"scope.row.avatar\" :preview-src-list=\"[scope.row.avatar]\"></el-image>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <el-table-column  v-if=\"employee.powerName === '人事' || user.role === 'ADMIN'\" label=\"操作\" align=\"center\" width=\"180\">\r\n          <template v-slot=\"scope\">\r\n            <el-button   size=\"mini\" type=\"primary\" plain @click=\"handleEdit(scope.row)\">编辑</el-button>\r\n            <el-button   v-if=\"user.level === 2 || user.role === 'ADMIN'\" size=\"mini\" type=\"danger\" plain @click=\"del(scope.row.id)\">删除</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <div class=\"pagination\">\r\n        <el-pagination\r\n            background\r\n            @current-change=\"handleCurrentChange\"\r\n            :current-page=\"pageNum\"\r\n            :page-sizes=\"[5, 10, 20]\"\r\n            :page-size=\"pageSize\"\r\n            layout=\"total, prev, pager, next\"\r\n            :total=\"total\">\r\n        </el-pagination>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <el-dialog title=\"员工\" :visible.sync=\"fromVisible\" width=\"40%\" :close-on-click-modal=\"false\" destroy-on-close>\r\n      <el-form :model=\"form\" label-width=\"100px\" style=\"padding-right: 50px\" :rules=\"rules\" ref=\"formRef\">\r\n        <el-form-item label=\"用户名\" prop=\"username\" :error=\"errorMessages.username\">\r\n          <el-input v-model=\"form.username\" placeholder=\"用户名\" @change=\"handleUserNameSelectChange\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"姓名\" prop=\"name\">\r\n          <el-input v-model=\"form.name\" placeholder=\"姓名\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"电话\" prop=\"phone\">\r\n          <el-input v-model=\"form.phone\" placeholder=\"电话\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"邮箱\" prop=\"email\">\r\n          <el-input v-model=\"form.email\" placeholder=\"邮箱\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"部门\" prop=\"level\">\r\n          <el-select v-model=\"form.departmentId\" placeholder=\"请选择部门\" style=\"width: 100%\">\r\n            <el-option v-for=\"item in departmentData\" :label=\"item.name\" :value=\"item.id\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"身份\">\r\n          <el-radio-group v-model=\"form.level\">\r\n            <el-radio :label=\"1\" value=\"1\">员工</el-radio>\r\n            <el-radio :label=\"2\" value=\"2\">部长</el-radio>\r\n          </el-radio-group>\r\n        </el-form-item>\r\n        <el-form-item label=\"头像\">\r\n          <el-upload\r\n              class=\"avatar-uploader\"\r\n              :action=\"$baseUrl + '/files/upload'\"\r\n              :headers=\"{ token: user.token }\"\r\n              list-type=\"picture\"\r\n              :on-success=\"handleAvatarSuccess\"\r\n          >\r\n            <el-button type=\"primary\">上传头像</el-button>\r\n          </el-upload>\r\n        </el-form-item>\r\n      </el-form>\r\n\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"fromVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"save\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport department from \"@/views/manager/Department.vue\";\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"Employee\",\r\n  computed: {\r\n    department() {\r\n      return department\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      tableData: [],  // 所有的数据\r\n      pageNum: 1,     // 当前的页码\r\n      pageSize: 10,   // 每页显示的个数\r\n      total: 0,\r\n      username: null,\r\n      fromVisible: false,\r\n      employee:\"\",\r\n      form: {\r\n\r\n      },\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      rules: {\r\n        username: [\r\n          {required: true, message: '请输入账号', trigger: 'blur'},\r\n        ],\r\n        phone: [\r\n          {\r\n            pattern: /^1[3456789]\\d{9}$/,\r\n            message: '手机号码格式不正确',\r\n            trigger: 'blur'\r\n          },\r\n        ],\r\n\r\n        email: [\r\n          {\r\n            pattern: /^\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/,\r\n            message: '邮箱地址格式不正确',\r\n            trigger: 'blur'\r\n          },\r\n        ],\r\n\r\n      },\r\n      errorMessages: {\r\n        username:'',//用户名的错误\r\n        // 其他表单项的错误信息\r\n      },\r\n      ids: [],\r\n      employeePower: \"\",\r\n      dialogOfUpload:false,\r\n      fileListExcel: [],\r\n    }\r\n  },\r\n  mounted() {\r\n    this.loadBefor()\r\n    this.loadEmployeePower()\r\n    this.handleUserNameSelectChange()\r\n    setTimeout(() => {\r\n      // 在延迟后执行相关操作\r\n\r\n    }, 200);\r\n  },\r\n  created() {\r\n    this.load(1)\r\n    this.loadDepartments()\r\n  },\r\n  methods: {\r\n    excelIn(){\r\n      this.dialogOfUpload = true\r\n    },\r\n    handleChangeExcel(file,fileListExcel){//文件数量改变\r\n      this.fileListExcel = fileListExcel;\r\n    },\r\n    employeeUpload() {\r\n      var param = new FormData();\r\n      this.fileListExcel.forEach(\r\n          (val, index) => {\r\n            param.append(\"file\", val.raw);\r\n          }\r\n      );\r\n\r\n      this.$request.post(\"/excel/employeeIn\", param,{\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n          token: this.user.token\r\n        }}).then(res => {\r\n        if(res.code === 200){\r\n          this.$message(res.msg);\r\n        }\r\n      });\r\n\r\n\r\n    },\r\n\r\n    downloadExcelM(){\r\n      // 发送请求到后端，下载文件\r\n      this.$request.post('/excel/employeeM', this.form, { responseType: 'blob' })\r\n          .then(res => {\r\n            let blob = new Blob([res], { type: 'application/xlsx' });\r\n            let url = window.URL.createObjectURL(blob);\r\n            const link = document.createElement('a'); //创建a标签\r\n            link.href = url;\r\n            link.download = '员工模板.xlsx'; //重命名文件\r\n            link.click();\r\n            URL.revokeObjectURL(url);\r\n          })\r\n          .catch(error => {\r\n            this.$message.error('下载文件失败', error);\r\n          });\r\n    },\r\n    downloadExcel() {\r\n      // 发送请求到后端，下载文件\r\n      this.$request.post('/excel/employeeOut', this.form, { responseType: 'blob' })\r\n          .then(res => {\r\n            let blob = new Blob([res], { type: 'application/xlsx' });\r\n            let url = window.URL.createObjectURL(blob);\r\n            const link = document.createElement('a'); //创建a标签\r\n            link.href = url;\r\n            link.download = '员工表.xlsx'; //重命名文件\r\n            link.click();\r\n            URL.revokeObjectURL(url);\r\n          })\r\n          .catch(error => {\r\n            this.$message.error('下载文件失败', error);\r\n          });\r\n    },\r\n\r\n    handleUserNameSelectChange(){\r\n      this.$request.get('/employee/selectByUsername/' + this.form.username).then(res => {\r\n        if (res.code === '200') {\r\n          this.errorMessages.username = ''; // 清空错误信息\r\n        } else {\r\n          this.errorMessages.username = res.msg; // 设置错误信息\r\n        }\r\n      })\r\n    },\r\n    loadEmployeePower(){\r\n      //获取当前员工用户的信息\r\n      this.$request.get('/employee/selectPowerName').then(res => {\r\n        if (res.code === '200') {\r\n          this.employeePower = res.data\r\n        } else {\r\n          this.$message.error(res.msg)\r\n        }\r\n      })\r\n    },\r\n\r\n    loadDepartments() {\r\n      this.$request.get('/department/selectAll').then(res => {\r\n        if (res.code === '200') {\r\n          this.departmentData = res.data\r\n        } else {\r\n          this.$message.error(res.msg)\r\n        }\r\n      })\r\n    },\r\n\r\n    handleAdd() {   // 新增数据\r\n      this.form = {}  // 新增数据的时候清空数据\r\n      this.fromVisible = true   // 打开弹窗\r\n    },\r\n\r\n    handleEdit(row) {   // 编辑数据\r\n      this.form = JSON.parse(JSON.stringify(row))  // 给form对象赋值  注意要深拷贝数据\r\n      this.fromVisible = true   // 打开弹窗\r\n    },\r\n\r\n    save() {   // 保存按钮触发的逻辑  它会触发新增或者更新\r\n      this.$refs.formRef.validate((valid) => {\r\n        if(typeof(this.form.departmentId) == \"undefined\" && this.form.level != null){\r\n          this.$message.error(\"请选择部门\")\r\n        }\r\n        else if(this.form.departmentId != null && typeof(this.form.level) == \"undefined\"){\r\n          this.$message.error(\"请选择身份\")\r\n        }else{\r\n            if (valid) {\r\n          this.$request({\r\n            url: this.form.id ? '/employee/update' : '/employee/add',\r\n            method: this.form.id ? 'PUT' : 'POST',\r\n            data: this.form\r\n          }).then(res => {\r\n            if (res.code === '200') {  // 表示成功保存\r\n              this.$message.success('保存成功')\r\n              this.load(1)\r\n              this.fromVisible = false\r\n            } else {\r\n              this.$message.error(res.msg)  // 弹出错误的信息\r\n            }\r\n          })\r\n        }\r\n        }\r\n      })\r\n    },\r\n\r\n    del(id) {   // 单个删除\r\n      this.$confirm('您确定删除吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n        this.$request.delete('/employee/delete/' + id).then(res => {\r\n          if (res.code === '200') {   // 表示操作成功\r\n            this.$message.success('操作成功')\r\n            this.load(1)\r\n          } else {\r\n            this.$message.error(res.msg)  // 弹出错误的信息\r\n          }\r\n        })\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    handleSelectionChange(rows) {   // 当前选中的所有的行数据\r\n      this.ids = rows.map(v => v.id)\r\n    },\r\n    delBatch() {   // 批量删除\r\n      if (!this.ids.length) {\r\n        this.$message.warning('请选择数据')\r\n        return\r\n      }\r\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n        this.$request.delete('/employee/delete/batch', {data: this.ids}).then(res => {\r\n          if (res.code === '200') {   // 表示操作成功\r\n            this.$message.success('操作成功')\r\n            this.load(1)\r\n          } else {\r\n            this.$message.error(res.msg)  // 弹出错误的信息\r\n          }\r\n        })\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    loadBefor(){\r\n      //获取信息\r\n      this.$request.get('/employee/selectPowerName').then(res => {\r\n        if (res.code === '200') {\r\n          this.employee = res.data\r\n        } else {\r\n          this.$message.error(res.msg)\r\n        }\r\n      })\r\n    },\r\n    load(pageNum) {  // 分页查询\r\n      if (pageNum) this.pageNum = pageNum\r\n      this.$request.get('/employee/selectPage', {\r\n        params: {\r\n          pageNum: this.pageNum,\r\n          pageSize: this.pageSize,\r\n          username: this.username,\r\n        }\r\n      }).then(res => {\r\n        this.tableData = res.data?.list\r\n        this.total = res.data?.total\r\n      })\r\n    },\r\n    reset() {\r\n      this.username = null\r\n      this.load(1)\r\n    },\r\n    handleCurrentChange(pageNum) {\r\n      this.load(pageNum)\r\n    },\r\n    handleAvatarSuccess(response, file, fileList) {\r\n      // 把头像属性换成上传的图片的链接\r\n      this.form.avatar = response.data\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}